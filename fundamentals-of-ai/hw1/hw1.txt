Name: Dhruv Chakraborty
UID: 204-962-098
CS 161 HW 1



Problem 1:

The function works as expected for small values such as for computing the first 10 Padovan numbers.
However, it is extremely slow for larger values, particularly stalling for values over 60 in my 
case. This might be the case because of the exceedingly large number of calls made to the recursion
stack for larger values. Since my implementation does not explicitly utilize tail recursion, this 
leads to the slow performance.

Test Cases:
[2]> (pad 0)
1
[3]> (pad 1)
1
[4]> (pad 2)
1
[5]> (pad 3)
2
[6]> (pad 4)
2
[7]> (pad 5)
3
[8]> (pad 6)
4
[9]> (pad 7)
5
[10]> (pad 8)
7
[11]> (pad 9)
9
[12]> (pad 10)
12



=========
Problem 2:

The relationship between sums and pad is that pad(n) = sums (n) + 1. To see why this is the case, 
consider how pad is just adding 1's a certain number of times, starting with the number 1. sums counts 
the number of times these additions happen, but starts at 0 instead of 1. Thus, pad(n) = sums(n) + 1.

Test Cases:
[14]> (sums 0)
0
[15]> (sums 1)
0
[16]> (sums 2)
0
[17]> (sums 3)
1
[18]> (sums 4)
1
[19]> (sums 5)
2
[20]> (sums 6)
3
[21]> (sums 7)
4
[22]> (sums 8)
6
[23]> (sums 9)
8
[24]> (sums 10)
11



=========
Problem 3:

Test Cases:
[28]> (anon '42)
?
[29]> (anon 'FOO)
?
[30]> (anon '(((L E) F) T))
(((? ?) ?) ?)
[31]> (anon '(5 FOO 3.1 -0.2))
(? ? ? ?)
[32]> (anon '(1 (FOO 3.1) -0.2))
(? (? ?) ?)
[33]> (anon '(((1 2) (FOO 3.1)) (BAR -0.2)))
(((? ?) (? ?)) (? ?))
[34]> (anon '(R (I (G (H T)))))
(? (? (? (? ?))))

